{
  "name": "O2h5-boilerplate",
  "tagline": "针对微信移动web场景的动效模板脚手架，可用来制作翻页动画，各种推广宣传H5页面。包括移动端自适应（rem 或 zoom），雪碧图合并，hot reload，以及翻屏组件，重力感应，微信分享等一系列的开发库，通过webpack进行打包发布。",
  "body": "\r\n## H5活动脚手架\r\n\r\n针对微信移动web场景的动效模板脚手架，可用来制作翻页动画，各种推广宣传H5页面。包括移动端自适应（rem 或 zoom），雪碧图合并，hot reload，以及翻屏组件，重力感应，微信分享等一系列的开发库，通过webpack进行打包发布。\r\n\r\n基于webpack，同时加了一些市面上比较好的公用组件库，以及自己开发定制的组件，可选择性引用，这里只需关注业务逻辑，其他的已经帮你做好了！\r\n\r\n\r\n**『 Boilerplate 主要功能 』**\r\n\r\n- [x] 页面响应式REM px自动转换REM （可选）\r\n- [x] 页面响应式Zoom 对需要缩放部分引用class=\"__z\" （可选）\r\n- [x] 主要针对移动端H5网页开发，并专门针对微信做了兼容\r\n- [x] 打包发布，快速配置\r\n- [x] hot reload\r\n- [x] 图片自动分组合并雪碧图\r\n- [x] 图片压缩\r\n- [x] 代码打包压缩\r\n- [x] sass\r\n- [x] autoprefixer\r\n\r\n**『 相关组件依赖 』** \r\n\r\n- [x] Zepto [参考地址](http://zeptojs.com/)\r\n\r\nZepto，会默认引入，其他可根据项目需求引入\r\n\r\n### 『 系统配置说明 』\r\n\r\n./config/config.js 配置文件\r\n\r\n```javascript\r\n{\r\n    DEV:{ // 开发环境配置\r\n        IP: 'xx.xx.xx.xx', // 可配置本机IP，默认localhost\r\n        PROJECTPATH: 'example-inout-slider' // 项目开发路径\r\n    },\r\n    PRODUCTION:{ // 线上环境配置\r\n        PUBLICPATH: 'http://l-zhi.com/',\r\n        PROJECTPATH: 'example-inout-slider' // 项目发布路径\r\n    }\r\n}\r\n\r\n// 其他可选配置项如下：\r\n{\r\n    TITLE:'O2-示例', // 页面标题\r\n    PUBLICPATH: '/', // 静态资源地址，非通天塔使用参数, npm run build-ttt 忽略此参数\r\n    NODE_ENV : process.env.NODE_ENV || 'development',\r\n    RESPONSIVE_REM: true, //是否用rem做适配\r\n    RESPONSIVE_ZOOM: false, //是否用Zoom做适配\r\n    OUTPUT_PATH: 'project', // 输出项目文件名\r\n    PORT: '3007', // 开发环境端口\r\n    DESIGN_WIDTH: 750, // 设计稿的宽度，默认750，也可以设置其他的比如 640，设置后，可直接根据实际设计稿宽高写样式，前提是开启rem 或者 zoom 缩放\r\n    IP:'localhost', //默认 localhost\r\n    PUBLISH_IMAGEMIN: { // 发布的图片压缩配置\r\n        optimizationLevel: 7, \r\n        interlaced: false,\r\n        pngquant:{\r\n            quality: \"65-90\",\r\n            speed: 4\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n#### 『 目录结构 』\r\n```bash\r\n.\r\n├── project                     # build 之后目录结构\r\n│   ├── css\r\n│   ├── js\r\n│   ├── plugin\r\n│   ├── img\r\n│   └── index.html\r\n├── config                      # 项目配置（包括响应式开发配置）\r\n├── src                         # 源代码\r\n│   ├── common                  # 公用组件    \r\n│   │   ├── css\r\n│   │   ├── img\r\n│   │   ├── js\r\n│   │   └── template            # 公用模板\r\n│   ├── example-all             # 组件示例\r\n│   ├── example-inout-slider    # slider in-out 可以此作为开发基础模板\r\n│   │   ├── css\r\n│   │   ├── img\r\n│   │   │   └── icon            # 需要合雪碧图的图片放在这里，其他图片放在根目录下\r\n│   │   ├── js\r\n│   │   ├── plugin              # 存放mp3 等其他资源文件\r\n│   │   └── index.html          # html模板文件， .container 中的内容\r\n│   └── example-threejs         # Threejs 3D 示例\r\n│\r\n├── webpack.base.js             # webpack基础配置文件 \r\n├── webpack.config.dev.js       # webpack开发配置文件\r\n└── webpack.config.build.js     # webpack构建项目配置文件  \r\n```\r\n\r\n### 『 使用说明 』\r\n\r\n开发中可直接复制 example-base 作为基础开发模板，迭代项目。\r\n\r\n```bash\r\n# node6.2.2 +\r\n\r\nnpm install\r\n\r\nnpm start # 项目开发\r\n\r\nnpm run build # 项目打包\r\n```\r\n\r\nPS： node-sass 可能安装会比较慢，如果不行可以用淘宝镜像。\r\n\r\n```bash\r\nSASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/ npm install node-sass\r\n```\r\n\r\n### 『 发布说明 』\r\n```bash\r\nnpm run build\r\n```\r\n发布的时候代码可以直接用 **./project** （默认发布代码地址）\r\n\r\n**『 演示 』**\r\n\r\n下面的是各种简单示例，扫一下吧~\r\n\r\nExamples-all:\r\n\r\n![扫一扫](http://img11.360buyimg.com/jdphoto/s194x195_jfs/t3505/22/345911806/6642/894c6a6c/580733e7N0150e47b.png)\r\n\r\nExamples-threejs:\r\n\r\n![扫一扫](http://img11.360buyimg.com/jdphoto/s192x193_jfs/t3724/272/981318967/4210/13d5f89d/58199d9cN1ca8fb35.png)\r\n\r\nExamples-inout-slider:\r\n\r\n![扫一扫](http://img11.360buyimg.com/jdphoto/s196x193_jfs/t3646/14/954371307/4087/a8d75613/5819acccN9c4a6c55.png)\r\n\r\nExamples-1:\r\n\r\n![扫一扫](http://img11.360buyimg.com/jdphoto/s196x197_jfs/t3691/12/1002202878/4204/f2f29abe/58199f1dN5c6c8f86.png)\r\n\r\n其他:\r\n\r\n![扫一扫](http://img11.360buyimg.com/jdphoto/s193x194_jfs/t3349/256/936515502/4035/950cc046/5819adb7Nfc4c79da.png)\r\n\r\n#### 『 插件列表 』\r\n* [webpack](https://webpack.github.io/): is a module bundler\r\n* [css-loader](https://github.com/webpack/css-loader) : css loader module for webpack\r\n* [sass-loader](https://github.com/jtangelder/sass-loader) : SASS loader for Webpack\r\n* [file-loader](https://github.com/webpack/file-loader) : file loader for webpack\r\n* [image-webpack-loader](https://github.com/tcoopman/image-webpack-loader) : Image loader module for webpack\r\n* [postcss-loader](https://github.com/postcss/postcss-loader) : PostCSS loader for webpack\r\n* [script-loader](https://github.com/webpack/script-loader) : script loader module for webpack\r\n* [style-loader](https://github.com/webpack/style-loader) : style loader module for webpack\r\n* [url-loader](https://github.com/webpack/url-loader) : url loader module for webpack\r\n* [exports-loader](https://github.com/webpack/exports-loader) : exports loader module for webpack\r\n* [autoprefixer](https://github.com/postcss/autoprefixer) : Parse CSS and add vendor prefixes to rules by Can I Use\r\n* [extract-text-webpack-plugin](https://github.com/webpack/extract-text-webpack-plugin) : Extract text from bundle into a file.\r\n* [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin) : Simplifies creation of HTML files to serve your webpack bundles\r\n* [lodash](https://lodash.com/): A modern JavaScript utility library delivering modularity, performance & extras\r\n* [postcss-import](https://github.com/postcss/postcss-import) : PostCSS plugin to inline @import rules content\r\n* [postcss-plugin-px2rem](https://github.com/ant-tool/postcss-plugin-px2rem) : postcss plugin px2rem\r\n* [postcss-sprites](https://github.com/2createStudio/postcss-sprites) : Generate sprites from stylesheets.\r\n* [webpack-dev-server](https://webpack.github.io/docs/webpack-dev-server.html) : The webpack-dev-server is a little node.js Express server\r\n\r\nｂ（￣▽￣）ｄ 感谢！~\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}